{"version":3,"sources":["logo.svg","page/LoginPage.js","function/fetch.js","page/RegisterPage.js","page/TicketInfoPage.js","page/TicketDetailPage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","props","login","id","state","pw","fetch","method","cache","then","rsp","json","code","console","log","history","push","style","maxWidth","padding","margin","className","initialValues","remember","Item","name","rules","required","message","placeholder","onChange","e","setState","target","value","type","valuePropName","noStyle","data-cy","htmlType","onClick","React","Component","baseURL","handleRtn","callback","data","alert","msg","postFetch","url","body","completeURL","JSON","stringify","mode","headers","getFetch","params","newURL","URL","window","location","origin","Object","keys","forEach","key","searchParams","append","makeURL","href","Option","Select","RegisterPage","status","nickname","pw1","pw2","this","length","PW","password","prefix","scrollToFirstError","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","whitespace","float","submitRegister","GotoLogIn","Column","Table","RangePicker","ColumnGroup","DatePicker","TicketInfoPage","types","selectedType","selectedBeginTime","selectedEndTime","keyword","children","i","type_name","beginTime","endTime","span","offset","width","direction","size","showTime","format","search","dataSource","title","dataIndex","render","record","tid","ticketName","typeName","price","availableNumber","detail","match","ticketId","bordered","label","color","App","path","component","to","TicketDetailPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3749bdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport Link from \"react\";\r\nimport {Button, Checkbox, Form, Input} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nexport default class LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            pw: \"\",\r\n        }\r\n    }\r\n\r\n    login = () => {\r\n        let id = this.state.id\r\n        let pw = this.state.pw\r\n        fetch('http://localhost:8080/api/login?id='+id+\"&password=\"+pw,{\r\n            method:'GET',\r\n            cache:'default'\r\n        }).then(rsp => rsp.json().then(rsp => {\r\n            if(rsp.code!=0)\r\n                console.log(rsp);\r\n            else {\r\n                console.log(rsp);\r\n                this.props.history.push(\"/tickets\")\r\n            }\r\n        }))\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    maxWidth: \"500px\",\r\n                    padding: \"15px\",\r\n                    margin: \"0 auto\"\r\n                }}>\r\n                    <Form\r\n                        className=\"login-form\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入id',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                id=\"id\"\r\n                                placeholder=\"id\"\r\n                                onChange={(e) => {\r\n                                    this.setState({id: e.target.value})\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                id=\"pwInput\"\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                                onChange={(e) => {\r\n                                    this.setState({pw: e.target.value})\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                <Checkbox>记住我</Checkbox>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                                data-cy=\"login\"\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                                onClick={() => this.login()}\r\n                            >\r\n                                登录\r\n                            </Button>\r\n                            或者 <a data-cy=\"goToRegister\"><span\r\n                            onClick={() => this.props.history.push(\"/register\")}>立刻注册\r\n                            </span>\r\n                        </a>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","const baseURL = \"http://localhost:8080/api\";\r\n\r\nfunction makeURL(url, params = {}) {\r\n    let newURL = new URL(url, window.location.origin);\r\n    Object.keys(params).forEach(key => newURL.searchParams.append(key, params[key]));\r\n    return newURL;\r\n}\r\n\r\n\r\nfunction handleRtn(rsp, callback) {\r\n    if (rsp.code === 0) {\r\n        callback(rsp.data);\r\n    } else {\r\n        alert(rsp.msg);\r\n    }\r\n}\r\n\r\nlet postFetch = (url, body, callback) => {\r\n    let completeURL = baseURL + url;\r\n    console.log(JSON.stringify(body));\r\n    fetch(completeURL, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        cache:'default',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n    }).then(rsp => rsp.json().then(rsp => {\r\n        handleRtn(rsp, callback);\r\n    }))\r\n};\r\n\r\nlet deleteFetch = (url, body, callback) => {\r\n    let completeURL = baseURL + url;\r\n    fetch(completeURL, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n        credentials: 'include'\r\n    }).then(rsp => rsp.then(rsp => {\r\n        console.log(rsp)\r\n    }))\r\n};\r\n\r\nlet getFetch = (url, params, callback) => {\r\n    let completeURL = makeURL(baseURL + url, params).href;\r\n    console.log(completeURL)\r\n    fetch(completeURL, {\r\n        method: \"GET\",\r\n        cache:'default',\r\n        mode: \"cors\"\r\n    }).then(rsp => rsp.json().then(rsp => {\r\n        console.log(rsp)\r\n        handleRtn(rsp, callback);\r\n    }));\r\n    // let completeURL = baseURL + url;\r\n    // axios.get(completeURL, {\r\n    //     params: params,\r\n    //     headers: {\r\n    //         'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\")\r\n    //     }\r\n    // }).then((rsp) => callback(rsp));\r\n};\r\n\r\nexport {postFetch, deleteFetch, getFetch}","import React from \"react\";\r\nimport {Button, Form, Input, Select} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {postFetch} from \"../function/fetch\";\r\n\r\nconst {Option} = Select;\r\n\r\nconst prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select\r\n            style={{\r\n                width: 70,\r\n            }}\r\n        >\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n        </Select>\r\n    </Form.Item>\r\n);\r\n\r\nexport default class RegisterPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            nickname: \"\",\r\n            pw: \"\",\r\n            pw1: \"\",\r\n            pw2: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    GotoLogIn() {\r\n        this.props.history.push('/login');\r\n    }\r\n\r\n    login = () => {\r\n        let id = this.state.id\r\n        let pw = this.state.pw\r\n        console.log(id)\r\n        console.log(pw)\r\n        fetch('http://192.168.1.106:8080/login?id='+id+\"&password=\"+pw,{\r\n            method:'POST',\r\n            mode:'cors',\r\n            cache:'default'\r\n        }).then(rsp => rsp.json().then(rsp => {\r\n            if(rsp.status==401)\r\n                alert(rsp.msg);\r\n            else {\r\n                console.log(rsp);\r\n                this.props.history.push(\"/register\")\r\n            }\r\n        }))\r\n    };\r\n\r\n\r\n    submitRegister() {\r\n        if ((this.state.id.length > 0)\r\n            && (this.state.nickname.length > 0)\r\n            && (this.state.PW.length > 0)) {\r\n            postFetch('/user/register',\r\n                {\r\n                    name: this.state.nickname,\r\n                    id: this.state.id,\r\n                    password: this.state.pw,\r\n                }, (rsp) => {\r\n                    this.login();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    maxWidth: \"500px\",\r\n                    padding: \"15px\",\r\n                    margin: \"0 auto\"\r\n                }}>\r\n                    <Form\r\n                        style={{\r\n                            maxWidth: \"300px\",\r\n                            margin: \"0 auto\"\r\n                        }}\r\n                        name=\"register\"\r\n                        initialValues={{\r\n                            prefix: '86',\r\n                        }}\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入id',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                id=\"idInput\"\r\n                                placeholder={\"输入id\"}\r\n                                onChange={(e) => {\r\n                                    this.setState({id: e.target.value})\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password\r\n                                id=\"pw1\"\r\n                                onChange={(e) => {\r\n                                    if (e.target.value === this.state.pw2) {\r\n                                        this.setState({\r\n                                            pw1: e.target.value,\r\n                                            pw: e.target.value\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({\r\n                                            pw1: e.target.value\r\n                                        });\r\n                                    }\r\n                                }}\r\n                                placeholder={\"设置密码\"}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请确认密码',\r\n                                },\r\n                                ({getFieldValue}) => ({\r\n                                    validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject('两次输入不一致');\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                id=\"pw2\"\r\n                                onChange={(e) => {\r\n                                    if (e.target.value === this.state.pw1) {\r\n                                        this.setState({\r\n                                            pw2: e.target.value,\r\n                                            PW: e.target.value\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({\r\n                                            pw2: e.target.value\r\n                                        });\r\n                                    }\r\n                                }}\r\n                                placeholder={\"确认密码\"}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"nickname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入昵称',\r\n                                    whitespace: true,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                id=\"nameInput\"\r\n                                placeholder={\"设置昵称\"}\r\n                                onChange={(e) => {\r\n                                    this.setState({nickname: e.target.value})\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item style={{maxWidth: \"200px\", margin: \"0 auto\"}}>\r\n                            <Button\r\n                                id=\"submitButton\"\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{float: \"left\"}}\r\n                                onClick={() => {\r\n                                    this.submitRegister()\r\n                                }}\r\n                            >\r\n                                注册\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{float: \"right\"}}\r\n                                onClick={() => this.GotoLogIn()}\r\n                            >\r\n                                返回\r\n                            </Button>\r\n\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {Button,Input,DatePicker,Select,Table, Tag, Space ,Col} from 'antd';\r\nimport React from \"react\";\r\nimport {getFetch, postFetch} from \"../function/fetch\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst {RangePicker} = DatePicker\r\nexport default class TicketInfoPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data:null,\r\n            types:null,\r\n            selectedType:null,\r\n            selectedBeginTime:null,\r\n            selectedEndTime:null,\r\n            keyword:\"\"\r\n        }\r\n        // getFetch(\"/ticket/all\",\"\",(rsp)=>this.setState({\r\n        //     data:rsp\r\n        // }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        getFetch(\"/ticket/all\",\"\",(rsp)=>{\r\n            console.log(rsp)\r\n            this.setState({\r\n                data:rsp\r\n            })\r\n        })\r\n        getFetch(\"/ticket/allTypes\",\"\",(rsp)=>{\r\n            console.log(rsp);\r\n            let children=[];\r\n            for(let i=0;i<rsp.length;i++){\r\n                children.push(<Select key={rsp[i].type_name}>{rsp[i].type_name}</Select>);\r\n            }\r\n            this.setState({types:children})\r\n        })\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     getFetch(\"/ticket/all\",\"\",(rsp)=>this.setState({\r\n    //         data:rsp\r\n    //     }))\r\n    // }\r\n\r\n    search(){\r\n        if(this.state.selectedType==null || this.state.selectedBeginTime==null || this.state.selectedEndTime==null){\r\n            alert(\"信息不足！\")\r\n            return;\r\n        }\r\n        let body = new Object();\r\n        body.type=this.state.selectedType;\r\n        body.beginTime=this.state.selectedBeginTime;\r\n        body.endTime=this.state.selectedEndTime;\r\n        body.keyword = this.state.keyword\r\n        postFetch(\"/ticket/search\",body,(rsp)=>{\r\n            this.setState({data:rsp});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Col span={12} offset={6}>\r\n                <Select style={{ width: 200 }} placeholder=\"选择门票类型\" onChange={(value)=>this.setState({selectedType:value})}>\r\n                    {this.state.types}\r\n                </Select>\r\n                <Space direction=\"vertical\" size={12}>\r\n                    <RangePicker showTime onChange={(value)=>{\r\n                        if(value==null)\r\n                            this.setState({\r\n                                selectedBeginTime:null,\r\n                                selectedEndTime:null\r\n                            })\r\n                        else\r\n                            this.setState({\r\n                                selectedBeginTime:value[0].format('YYYY-MM-DD HH:MM:SS'),\r\n                                selectedEndTime:value[1].format('YYYY-MM-DD HH:MM:SS')\r\n                            })\r\n                    }}/>\r\n                </Space>\r\n                <Input placeholder=\"关键字\" onChange={(e)=>this.setState({keyword:e.target.value})} /><Button type=\"primary\" onClick={()=>{\r\n                    this.search()\r\n            }}>搜索</Button>\r\n            <Table dataSource={this.state.data}>\r\n                <Column title=\"ticket name\" dataIndex=\"ticketName\"/>\r\n                <Column title=\"price\" dataIndex=\"price\"/>\r\n                <Column title=\"available nums\" dataIndex=\"availableNumber\"/>\r\n                <Column title=\"Type Name\" dataIndex=\"typeName\"/>\r\n                <Column title=\"开始时间\" dataIndex=\"beginTime\"/>\r\n                <Column title=\"结束时间\" dataIndex=\"endTime\" />\r\n                <Column\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    render={(record) => (\r\n                            <a onClick={()=>this.props.history.push(\"/ticketDetail/\"+record.tid)}>详情</a>\r\n                    )}\r\n                />\r\n            </Table>\r\n            </Col>\r\n        );\r\n    }\r\n}","import React from \"react\";\nimport {getFetch} from \"../function/fetch\";\nimport { Descriptions, Badge } from 'antd';\n\nexport default class TicketInfoPage extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            ticketName:null,\n            beginTime:null,\n            endTime:null,\n            typeName:null,\n            price:null,\n            availableNumber:null,\n            detail:null\n        }\n    }\n\n    componentDidMount() {\n        getFetch(\"/ticket/getOne?ticketId=\"+this.props.match.params.ticketId,'',(rsp)=>{\n            console.log(rsp);\n            this.setState({\n                ticketName:rsp.ticketName,\n                beginTime:rsp.beginTime,\n                endTime:rsp.endTime,\n                typeName:rsp.typeName,\n                price:rsp.price,\n                availableNumber:rsp.availableNumber,\n                detail:rsp.detail\n            })\n            console.log(this.state)\n        })\n    }\n\n    render(){\n        return (\n            <Descriptions title=\"演出详情\" bordered>\n                <Descriptions.Item label=\"演出名称\">{this.state.ticketName}</Descriptions.Item>\n                <Descriptions.Item label=\"开始时间\">{this.state.beginTime}</Descriptions.Item>\n                <Descriptions.Item label=\"结束时间\">{this.state.endTime}</Descriptions.Item>\n                <Descriptions.Item label=\"所属类型\">{this.state.typeName}</Descriptions.Item>\n                <Descriptions.Item label=\"价格\"><span style={{color:\"red\"}}>{this.state.price}</span></Descriptions.Item>\n                <Descriptions.Item label=\"剩余名额\"><span style={{color:\"blue\"}}>{this.state.availableNumber}</span></Descriptions.Item>\n                <Descriptions.Item label=\"演出详情\" span={3}>\n                    {this.state.detail}\n                </Descriptions.Item>\n            </Descriptions>\n        );\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport LoginPage from \"./page/LoginPage\";\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport RegisterPage from \"./page/RegisterPage\";\nimport React from \"react\";\nimport TicketInfoPage from \"./page/TicketInfoPage\";\nimport TicketDetailPage from \"./page/TicketDetailPage\";\n\nfunction App() {\n  return (\n      <HashRouter>\n        <Route path={'/login'} component={LoginPage}/>\n        <Route path={'/register'} component={RegisterPage}/>\n        <Route path={'/tickets'} component={TicketInfoPage}/>\n        <Redirect path={'/'} to={'/login'}/>\n        <Route path={\"/ticketDetail/:ticketId\"} component={TicketDetailPage}/>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}