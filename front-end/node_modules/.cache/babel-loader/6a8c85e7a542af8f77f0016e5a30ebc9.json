{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zhu/Code/IdeaProjects/ticket/src/page/RegisterPage.js\";\nimport React from \"react\";\nimport { Button, Form, Input, Select } from 'antd';\nimport 'antd/dist/antd.css';\nimport { postFetch } from \"../function/fetch\";\nconst {\n  Option\n} = Select;\n\nconst prefixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n  name: \"prefix\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"86\",\n      children: \"+86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"87\",\n      children: \"+87\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this);\n\nexport default class RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.login = () => {\n      let id = this.state.id;\n      let pw = this.state.pw;\n      fetch('api/api/login?id=' + id + \"&password=\" + pw, {\n        method: 'GET',\n        cache: 'default'\n      }).then(rsp => rsp.json().then(rsp => {\n        if (rsp.code != 0) console.log(rsp);else {\n          console.log(rsp);\n          localStorage.setItem('log', 1);\n          localStorage.setItem('id', this.state.id);\n          this.props.history.push(\"/tickets\");\n        }\n      }));\n    };\n\n    this.state = {\n      id: \"\",\n      pw: \"\",\n      pw1: \"\",\n      pw2: \"\"\n    };\n  }\n\n  GotoLogIn() {\n    this.props.history.push('/login');\n  }\n\n  submitRegister() {\n    if (this.state.id.length > 0 && this.state.PW.length > 0) {\n      postFetch('/user/register', {\n        id: this.state.id,\n        password: this.state.pw\n      }, rsp => {\n        this.login();\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: \"500px\",\n          padding: \"15px\",\n          margin: \"0 auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            maxWidth: \"300px\",\n            margin: \"0 auto\"\n          },\n          name: \"register\",\n          initialValues: {\n            prefix: '86'\n          },\n          scrollToFirstError: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"id\",\n            rules: [{\n              required: true,\n              message: '请输入id'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"idInput\",\n              placeholder: \"输入id\",\n              onChange: e => {\n                this.setState({\n                  id: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: '请输入密码'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              id: \"pw1\",\n              onChange: e => {\n                if (e.target.value === this.state.pw2) {\n                  console.log(e.target.value);\n                  this.setState({\n                    pw1: e.target.value,\n                    pw: e.target.value\n                  });\n                } else {\n                  this.setState({\n                    pw1: e.target.value\n                  });\n                }\n              },\n              placeholder: \"设置密码\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"confirm\",\n            dependencies: ['password'],\n            hasFeedback: true,\n            rules: [{\n              required: true,\n              message: '请确认密码'\n            }, ({\n              getFieldValue\n            }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject('两次输入不一致');\n              }\n\n            })],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              id: \"pw2\",\n              onChange: e => {\n                if (e.target.value === this.state.pw1) {\n                  console.log(e.target.value);\n                  this.setState({\n                    pw2: e.target.value,\n                    PW: e.target.value\n                  });\n                } else {\n                  this.setState({\n                    pw2: e.target.value\n                  });\n                }\n              },\n              placeholder: \"确认密码\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"nickname\",\n            rules: [{\n              required: true,\n              message: '请输入昵称',\n              whitespace: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"nameInput\",\n              placeholder: \"设置昵称\",\n              onChange: e => {\n                this.setState({\n                  nickname: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            style: {\n              maxWidth: \"200px\",\n              margin: \"0 auto\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"submitButton\",\n              type: \"primary\",\n              htmlType: \"submit\",\n              style: {\n                float: \"left\"\n              },\n              onClick: () => {\n                this.submitRegister();\n              },\n              children: \"\\u6CE8\\u518C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              style: {\n                float: \"right\"\n              },\n              onClick: () => this.GotoLogIn(),\n              children: \"\\u8FD4\\u56DE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/zhu/Code/IdeaProjects/ticket/src/page/RegisterPage.js"],"names":["React","Button","Form","Input","Select","postFetch","Option","prefixSelector","width","RegisterPage","Component","constructor","props","login","id","state","pw","fetch","method","cache","then","rsp","json","code","console","log","localStorage","setItem","history","push","pw1","pw2","GotoLogIn","submitRegister","length","PW","password","render","maxWidth","padding","margin","prefix","required","message","e","setState","target","value","getFieldValue","validator","rule","Promise","resolve","reject","whitespace","nickname","float"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Form, Input, Select} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {postFetch} from \"../function/fetch\";\r\n\r\nconst {Option} = Select;\r\n\r\nconst prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select\r\n            style={{\r\n                width: 70,\r\n            }}\r\n        >\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n        </Select>\r\n    </Form.Item>\r\n);\r\n\r\nexport default class RegisterPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            pw: \"\",\r\n            pw1: \"\",\r\n            pw2: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    GotoLogIn() {\r\n        this.props.history.push('/login');\r\n    }\r\n\r\n    login = () => {\r\n        let id = this.state.id\r\n        let pw = this.state.pw\r\n        fetch('api/api/login?id='+id+\"&password=\"+pw,{\r\n            method:'GET',\r\n            cache:'default'\r\n        }).then(rsp => rsp.json().then(rsp => {\r\n            if(rsp.code!=0)\r\n                console.log(rsp);\r\n            else {\r\n                console.log(rsp);\r\n                localStorage.setItem('log',1);\r\n                localStorage.setItem('id',this.state.id);\r\n                this.props.history.push(\"/tickets\")\r\n            }\r\n        }))\r\n    };\r\n\r\n\r\n    submitRegister() {\r\n        if ((this.state.id.length > 0)\r\n            && (this.state.PW.length > 0)) {\r\n            postFetch('/user/register',\r\n                {\r\n                    id: this.state.id,\r\n                    password: this.state.pw,\r\n                }, (rsp) => {\r\n                    this.login();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    maxWidth: \"500px\",\r\n                    padding: \"15px\",\r\n                    margin: \"0 auto\"\r\n                }}>\r\n                    <Form\r\n                        style={{\r\n                            maxWidth: \"300px\",\r\n                            margin: \"0 auto\"\r\n                        }}\r\n                        name=\"register\"\r\n                        initialValues={{\r\n                            prefix: '86',\r\n                        }}\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"id\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入id',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                id=\"idInput\"\r\n                                placeholder={\"输入id\"}\r\n                                onChange={(e) => {\r\n                                    this.setState({id: e.target.value})\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password\r\n                                id=\"pw1\"\r\n                                onChange={(e) => {\r\n                                    if (e.target.value === this.state.pw2) {\r\n                                        console.log(e.target.value)\r\n                                        this.setState({\r\n                                            pw1: e.target.value,\r\n                                            pw: e.target.value\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({\r\n                                            pw1: e.target.value\r\n                                        });\r\n                                    }\r\n                                }}\r\n                                placeholder={\"设置密码\"}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请确认密码',\r\n                                },\r\n                                ({getFieldValue}) => ({\r\n                                    validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject('两次输入不一致');\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                id=\"pw2\"\r\n                                onChange={(e) => {\r\n                                    if (e.target.value === this.state.pw1) {\r\n                                        console.log(e.target.value)\r\n                                        this.setState({\r\n                                            pw2: e.target.value,\r\n                                            PW: e.target.value\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({\r\n                                            pw2: e.target.value\r\n                                        });\r\n                                    }\r\n                                }}\r\n                                placeholder={\"确认密码\"}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"nickname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入昵称',\r\n                                    whitespace: true,\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                id=\"nameInput\"\r\n                                placeholder={\"设置昵称\"}\r\n                                onChange={(e) => {\r\n                                    this.setState({nickname: e.target.value})\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item style={{maxWidth: \"200px\", margin: \"0 auto\"}}>\r\n                            <Button\r\n                                id=\"submitButton\"\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{float: \"left\"}}\r\n                                onClick={() => {\r\n                                    this.submitRegister()\r\n                                }}\r\n                            >\r\n                                注册\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{float: \"right\"}}\r\n                                onClick={() => this.GotoLogIn()}\r\n                            >\r\n                                返回\r\n                            </Button>\r\n\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}