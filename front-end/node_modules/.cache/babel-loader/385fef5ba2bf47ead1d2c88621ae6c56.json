{"ast":null,"code":"const baseURL = \"api\";\n\nfunction makeURL(url, params = {}) {\n  let newURL = new URL(url, window.location.origin);\n  Object.keys(params).forEach(key => newURL.searchParams.append(key, params[key]));\n  return newURL;\n}\n\nfunction handleRtn(rsp, callback) {\n  if (rsp.code === 0) {\n    callback(rsp.data);\n  } else {\n    alert(rsp.msg);\n    if (rsp.code == 2) localStorage.removeItem('log');\n  }\n}\n\nlet postFetch = (url, body, callback) => {\n  let completeURL = baseURL + url;\n  console.log(JSON.stringify(body));\n  fetch(completeURL, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: 'default',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  }).then(rsp => rsp.json().then(rsp => {\n    handleRtn(rsp, callback);\n  }));\n};\n\nlet deleteFetch = (url, body, callback) => {\n  let completeURL = baseURL + url;\n  fetch(completeURL, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: 'include'\n  }).then(rsp => rsp.then(rsp => {\n    console.log(rsp);\n  }));\n};\n\nlet getFetch = (url, params, callback) => {\n  let completeURL = makeURL(baseURL + url, params).href;\n  console.log(completeURL);\n  fetch(completeURL, {\n    method: \"GET\",\n    cache: 'default',\n    mode: \"cors\"\n  }).then(rsp => rsp.json().then(rsp => {\n    console.log(rsp);\n    handleRtn(rsp, callback);\n  })); // let completeURL = baseURL + url;\n  // axios.get(completeURL, {\n  //     params: params,\n  //     headers: {\n  //         'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\")\n  //     }\n  // }).then((rsp) => callback(rsp));\n};\n\nexport { postFetch, deleteFetch, getFetch };","map":{"version":3,"sources":["/home/zhu/Code/IdeaProjects/ticket/src/function/fetch.js"],"names":["baseURL","makeURL","url","params","newURL","URL","window","location","origin","Object","keys","forEach","key","searchParams","append","handleRtn","rsp","callback","code","data","alert","msg","localStorage","removeItem","postFetch","body","completeURL","console","log","JSON","stringify","fetch","method","mode","cache","headers","then","json","deleteFetch","credentials","getFetch","href"],"mappings":"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","sourcesContent":["const baseURL = \"api\";\r\n\r\nfunction makeURL(url, params = {}) {\r\n    let newURL = new URL(url, window.location.origin);\r\n    Object.keys(params).forEach(key => newURL.searchParams.append(key, params[key]));\r\n    return newURL;\r\n}\r\n\r\n\r\nfunction handleRtn(rsp, callback) {\r\n    if (rsp.code === 0) {\r\n        callback(rsp.data);\r\n    } else {\r\n        alert(rsp.msg);\r\n        if(rsp.code==2)\r\n            localStorage.removeItem('log');\r\n    }\r\n}\r\n\r\nlet postFetch = (url, body, callback) => {\r\n    let completeURL = baseURL + url;\r\n    console.log(JSON.stringify(body));\r\n    fetch(completeURL, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        cache:'default',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n    }).then(rsp => rsp.json().then(rsp => {\r\n        handleRtn(rsp, callback);\r\n    }))\r\n};\r\n\r\nlet deleteFetch = (url, body, callback) => {\r\n    let completeURL = baseURL + url;\r\n    fetch(completeURL, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n        credentials: 'include'\r\n    }).then(rsp => rsp.then(rsp => {\r\n        console.log(rsp)\r\n    }))\r\n};\r\n\r\nlet getFetch = (url, params, callback) => {\r\n    let completeURL = makeURL(baseURL + url, params).href;\r\n    console.log(completeURL)\r\n    fetch(completeURL, {\r\n        method: \"GET\",\r\n        cache:'default',\r\n        mode: \"cors\"\r\n    }).then(rsp => rsp.json().then(rsp => {\r\n        console.log(rsp)\r\n        handleRtn(rsp, callback);\r\n    }));\r\n    // let completeURL = baseURL + url;\r\n    // axios.get(completeURL, {\r\n    //     params: params,\r\n    //     headers: {\r\n    //         'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\")\r\n    //     }\r\n    // }).then((rsp) => callback(rsp));\r\n};\r\n\r\nexport {postFetch, deleteFetch, getFetch}"]},"metadata":{},"sourceType":"module"}