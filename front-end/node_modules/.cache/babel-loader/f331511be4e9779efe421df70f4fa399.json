{"ast":null,"code":"var baseURL=\"api\";function makeURL(url){var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var newURL=new URL(url,window.location.origin);Object.keys(params).forEach(function(key){return newURL.searchParams.append(key,params[key]);});return newURL;}function handleRtn(rsp,callback){if(rsp.code===0){callback(rsp.data);}else{alert(rsp.msg);if(rsp.code==2)localStorage.removeItem('log');}}var postFetch=function postFetch(url,body,callback){var completeURL=baseURL+url;console.log(JSON.stringify(body));fetch(completeURL,{method:\"POST\",mode:\"cors\",cache:'default',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)}).then(function(rsp){return rsp.json().then(function(rsp){handleRtn(rsp,callback);});});};var deleteFetch=function deleteFetch(url,body,callback){var completeURL=baseURL+url;fetch(completeURL,{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body),credentials:'include'}).then(function(rsp){return rsp.then(function(rsp){console.log(rsp);});});};var getFetch=function getFetch(url,params,callback){var completeURL=makeURL(baseURL+url,params).href;console.log(completeURL);fetch(completeURL,{method:\"GET\",cache:'default',mode:\"cors\"}).then(function(rsp){return rsp.json().then(function(rsp){console.log(rsp);handleRtn(rsp,callback);});});// let completeURL = baseURL + url;\n// axios.get(completeURL, {\n//     params: params,\n//     headers: {\n//         'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\")\n//     }\n// }).then((rsp) => callback(rsp));\n};export{postFetch,deleteFetch,getFetch};","map":{"version":3,"sources":["/home/zhu/Code/IdeaProjects/ticket/src/function/fetch.js"],"names":["baseURL","makeURL","url","params","newURL","URL","window","location","origin","Object","keys","forEach","key","searchParams","append","handleRtn","rsp","callback","code","data","alert","msg","localStorage","removeItem","postFetch","body","completeURL","console","log","JSON","stringify","fetch","method","mode","cache","headers","then","json","deleteFetch","credentials","getFetch","href"],"mappings":"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","sourcesContent":["const baseURL = \"api\";\r\n\r\nfunction makeURL(url, params = {}) {\r\n    let newURL = new URL(url, window.location.origin);\r\n    Object.keys(params).forEach(key => newURL.searchParams.append(key, params[key]));\r\n    return newURL;\r\n}\r\n\r\n\r\nfunction handleRtn(rsp, callback) {\r\n    if (rsp.code === 0) {\r\n        callback(rsp.data);\r\n    } else {\r\n        alert(rsp.msg);\r\n        if(rsp.code==2)\r\n            localStorage.removeItem('log');\r\n    }\r\n}\r\n\r\nlet postFetch = (url, body, callback) => {\r\n    let completeURL = baseURL + url;\r\n    console.log(JSON.stringify(body));\r\n    fetch(completeURL, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        cache:'default',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n    }).then(rsp => rsp.json().then(rsp => {\r\n        handleRtn(rsp, callback);\r\n    }))\r\n};\r\n\r\nlet deleteFetch = (url, body, callback) => {\r\n    let completeURL = baseURL + url;\r\n    fetch(completeURL, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n        credentials: 'include'\r\n    }).then(rsp => rsp.then(rsp => {\r\n        console.log(rsp)\r\n    }))\r\n};\r\n\r\nlet getFetch = (url, params, callback) => {\r\n    let completeURL = makeURL(baseURL + url, params).href;\r\n    console.log(completeURL)\r\n    fetch(completeURL, {\r\n        method: \"GET\",\r\n        cache:'default',\r\n        mode: \"cors\"\r\n    }).then(rsp => rsp.json().then(rsp => {\r\n        console.log(rsp)\r\n        handleRtn(rsp, callback);\r\n    }));\r\n    // let completeURL = baseURL + url;\r\n    // axios.get(completeURL, {\r\n    //     params: params,\r\n    //     headers: {\r\n    //         'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\")\r\n    //     }\r\n    // }).then((rsp) => callback(rsp));\r\n};\r\n\r\nexport {postFetch, deleteFetch, getFetch}"]},"metadata":{},"sourceType":"module"}